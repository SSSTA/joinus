package com.sssta.joinus;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.os.Bundle;
import android.os.Parcelable;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.LayoutInflater;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.ImageView;
import android.widget.TextView;

public class MainActivity extends Activity{
	// ViewPager是google SDk中自带的一个附加包的一个类，可以用来实现屏幕间的切换。
		// android-support-v4.jar
		private ViewPager mPager;//页卡内容
		private List<View> listViews; // Tab页面列表
		private ImageView cursor;// 动画图片
		private TextView t1, t2, t3;// 页卡头标
		private int offset = 0;// 动画图片偏移量
		private int currIndex = 0;// 当前页卡编号
		private int bmpW;// 动画图片宽度
	 public void onCreate(Bundle savedInstanceState) {
		 	
	        super.onCreate(savedInstanceState);
	        setContentView(R.layout.activity_main); 
	        InitViewPager();
	        
	   }
	 /**
		 * 初始化ViewPager
		 */
		private void InitViewPager() {
			mPager = (ViewPager) findViewById(R.id.vPager);
			listViews = new ArrayList<View>();
			LayoutInflater mInflater = getLayoutInflater();
			listViews.add(mInflater.inflate(R.layout.listitem_large, null));
			listViews.add(mInflater.inflate(R.layout.listitem_large, null));
			listViews.add(mInflater.inflate(R.layout.listitem_large, null));
			mPager.setAdapter(new MyPagerAdapter(listViews));
			mPager.setCurrentItem(0);
			//mPager.setOnPageChangeListener(new MyOnPageChangeListener());
		}
	 /**
		 * ViewPager适配器
		 */
		public class MyPagerAdapter extends PagerAdapter {
			public List<View> mListViews;

			public MyPagerAdapter(List<View> mListViews) {
				this.mListViews = mListViews;
			}

			@Override
			public void destroyItem(View arg0, int arg1, Object arg2) {
				((ViewPager) arg0).removeView(mListViews.get(arg1));
			}

			@Override
			public void finishUpdate(View arg0) {
			}

			@Override
			public int getCount() {
				return mListViews.size();
			}

			@Override
			public Object instantiateItem(View arg0, int arg1) {
				((ViewPager) arg0).addView(mListViews.get(arg1), 0);
				return mListViews.get(arg1);
			}

			@Override
			public boolean isViewFromObject(View arg0, Object arg1) {
				return arg0 == (arg1);
			}

			@Override
			public void restoreState(Parcelable arg0, ClassLoader arg1) {
			}

			@Override
			public Parcelable saveState() {
				return null;
			}

			@Override
			public void startUpdate(View arg0) {
			}
		}
		
}
